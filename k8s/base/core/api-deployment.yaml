apiVersion: apps/v1
kind: Deployment
metadata:
  name: brave-mcp
  labels:
    app.kubernetes.io/name: brave-mcp
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: brave-search
    app.kubernetes.io/managed-by: kustomize
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: brave-mcp
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: brave-mcp
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: brave-search
        app.kubernetes.io/version: v1.0.0
    spec:
      serviceAccountName: brave-mcp-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: api
        image: ghcr.io/memenow/brave-search-mcp:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: brave-config
              key: NODE_ENV
        - name: BRAVE_MCP_TRANSPORT
          valueFrom:
            configMapKeyRef:
              name: brave-config
              key: BRAVE_MCP_TRANSPORT
        - name: BRAVE_MCP_PORT
          valueFrom:
            configMapKeyRef:
              name: brave-config
              key: BRAVE_MCP_PORT
        - name: BRAVE_API_KEY
          valueFrom:
            secretKeyRef:
              name: brave-credentials
              key: BRAVE_API_KEY
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: brave-config
              key: LOG_LEVEL
        - name: BRAVE_MCP_PATH
          value: "/api/v1/brave-search/"
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
            ephemeral-storage: "100Mi"
          limits:
            memory: "256Mi"
            cpu: "500m"
            ephemeral-storage: "200Mi"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
          readOnly: false
        - name: node-cache
          mountPath: /app/.cache
          readOnly: false
      volumes:
      - name: tmp
        emptyDir: {}
      - name: node-cache
        emptyDir: {}